[{"C:\\Users\\nhugh\\RampFEChallege\\src\\index.tsx":"1","C:\\Users\\nhugh\\RampFEChallege\\src\\App.tsx":"2","C:\\Users\\nhugh\\RampFEChallege\\src\\components\\AppContextProvider\\index.tsx":"3","C:\\Users\\nhugh\\RampFEChallege\\src\\components\\Instructions.tsx":"4","C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\useEmployees.ts":"5","C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\useTransactionsByEmployee.ts":"6","C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\usePaginatedTransactions.ts":"7","C:\\Users\\nhugh\\RampFEChallege\\src\\utils\\constants.ts":"8","C:\\Users\\nhugh\\RampFEChallege\\src\\components\\Transactions\\index.tsx":"9","C:\\Users\\nhugh\\RampFEChallege\\src\\components\\InputSelect\\index.tsx":"10","C:\\Users\\nhugh\\RampFEChallege\\src\\utils\\context.ts":"11","C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\useCustomFetch.ts":"12","C:\\Users\\nhugh\\RampFEChallege\\src\\components\\Transactions\\TransactionPane.tsx":"13","C:\\Users\\nhugh\\RampFEChallege\\src\\utils\\fetch.ts":"14","C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\useWrappedRequest.ts":"15","C:\\Users\\nhugh\\RampFEChallege\\src\\utils\\requests.ts":"16","C:\\Users\\nhugh\\RampFEChallege\\src\\components\\InputCheckbox\\index.tsx":"17"},{"size":314,"mtime":1722559737304,"results":"18","hashOfConfig":"19"},{"size":3140,"mtime":1722566343364,"results":"20","hashOfConfig":"19"},{"size":675,"mtime":1722559738140,"results":"21","hashOfConfig":"19"},{"size":593,"mtime":1722559737858,"results":"22","hashOfConfig":"19"},{"size":672,"mtime":1722559738669,"results":"23","hashOfConfig":"19"},{"size":930,"mtime":1722559738600,"results":"24","hashOfConfig":"19"},{"size":1210,"mtime":1722559738528,"results":"25","hashOfConfig":"19"},{"size":135,"mtime":1722559737748,"results":"26","hashOfConfig":"19"},{"size":1154,"mtime":1722559738262,"results":"27","hashOfConfig":"19"},{"size":3729,"mtime":1722564360909,"results":"28","hashOfConfig":"19"},{"size":238,"mtime":1722559737676,"results":"29","hashOfConfig":"19"},{"size":2201,"mtime":1722559738634,"results":"30","hashOfConfig":"19"},{"size":1170,"mtime":1722559738362,"results":"31","hashOfConfig":"19"},{"size":3115,"mtime":1722559737793,"results":"32","hashOfConfig":"19"},{"size":666,"mtime":1722559738493,"results":"33","hashOfConfig":"19"},{"size":1557,"mtime":1722559737632,"results":"34","hashOfConfig":"19"},{"size":688,"mtime":1722565194635,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qrse2p",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nhugh\\RampFEChallege\\src\\index.tsx",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\App.tsx",["88"],[],"import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true)\n    transactionsByEmployeeUtils.invalidateData()\n\n    await employeeUtils.fetchAll()\n    await paginatedTransactionsUtils.fetchAll()\n\n    setIsLoading(false)\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      if (employeeId !== \"\"){\n        paginatedTransactionsUtils.invalidateData()\n        await transactionsByEmployeeUtils.fetchById(employeeId)\n      }\n      else{\n        await loadAllTransactions()\n      }\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n\n            await loadTransactionsByEmployee(newValue.id)\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactions !== null && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                await loadAllTransactions()\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n","C:\\Users\\nhugh\\RampFEChallege\\src\\components\\AppContextProvider\\index.tsx",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\components\\Instructions.tsx",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\useEmployees.ts",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\useTransactionsByEmployee.ts",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\usePaginatedTransactions.ts",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\utils\\constants.ts",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\components\\Transactions\\index.tsx",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\components\\InputSelect\\index.tsx",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\utils\\context.ts",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\useCustomFetch.ts",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\components\\Transactions\\TransactionPane.tsx",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\utils\\fetch.ts",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\hooks\\useWrappedRequest.ts",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\utils\\requests.ts",[],[],"C:\\Users\\nhugh\\RampFEChallege\\src\\components\\InputCheckbox\\index.tsx",[],[],{"ruleId":"89","severity":1,"message":"90","line":42,"column":5,"nodeType":"91","endLine":42,"endColumn":62,"suggestions":"92"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'loadAllTransactions'. Either include it or remove the dependency array.","ArrayExpression",["93"],{"desc":"94","fix":"95"},"Update the dependencies array to be: [loadAllTransactions, paginatedTransactionsUtils, transactionsByEmployeeUtils]",{"range":"96","text":"97"},[1673,1730],"[loadAllTransactions, paginatedTransactionsUtils, transactionsByEmployeeUtils]"]